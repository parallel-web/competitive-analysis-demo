{
  "openapi": "3.0.3",
  "info": {
    "title": "Competitor Analysis API",
    "description": "AI-powered competitive intelligence platform that analyzes companies and their competitive landscape using web research and Reddit sentiment analysis.",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "url": "https://competitors.p0web.com"
    }
  },
  "servers": [
    {
      "url": "https://competitors.p0web.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Get homepage",
        "description": "Returns the main homepage with popular and recent analyses",
        "operationId": "getHomepage",
        "responses": {
          "200": {
            "description": "Homepage HTML",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Public"]
      }
    },
    "/new": {
      "get": {
        "summary": "Create new analysis",
        "description": "Initiates a new competitive analysis for a company. Requires authentication and validates the domain before processing.",
        "operationId": "createAnalysis",
        "security": [
          {
            "oauth": []
          }
        ],
        "parameters": [
          {
            "name": "company",
            "in": "query",
            "required": true,
            "description": "The domain name of the company to analyze (e.g., example.com)",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9]?(\\.[a-zA-Z]{2,})+$",
              "example": "openai.com"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Redirects to analysis page",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URL of the analysis page"
              }
            }
          },
          "400": {
            "description": "Invalid domain or missing company parameter",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded (5 analyses per user)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Analysis"]
      }
    },
    "/search/{query}": {
      "get": {
        "summary": "Search analyses",
        "description": "Searches through existing analyses by hostname (exact match), company name, domain, or content keywords using LIKE queries. Returns HTML results page.",
        "operationId": "searchAnalyses",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "description": "Search query - can be hostname, company name, domain, or keywords",
            "schema": {
              "type": "string",
              "minLength": 1,
              "example": "openai"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results HTML page",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Search query is required",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Search"]
      }
    },
    "/dump": {
      "get": {
        "summary": "Export analyses data",
        "description": "Returns paginated JSON dump of all analyses with parsed result data. Each item contains database columns (excluding raw result) plus run metadata, basis data, and task schema content.",
        "operationId": "dumpAnalyses",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number for pagination (defaults to 1)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated analyses data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DumpResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Cache control header (5 minutes)"
              }
            }
          },
          "400": {
            "description": "Invalid page number",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Export"]
      }
    },
    "/analysis/{hostname}": {
      "get": {
        "summary": "Get analysis result",
        "description": "Returns the competitive analysis results for a specific company",
        "operationId": "getAnalysis",
        "parameters": [
          {
            "name": "hostname",
            "in": "path",
            "required": true,
            "description": "The hostname/domain of the company",
            "schema": {
              "type": "string",
              "example": "openai.com"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis result page",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Analysis not found",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Analysis"]
      }
    },
    "/md/{hostname}": {
      "get": {
        "summary": "Get analysis as markdown",
        "description": "Returns a comprehensive markdown report of the competitive landscape analysis",
        "operationId": "getAnalysisMarkdown",
        "parameters": [
          {
            "name": "hostname",
            "in": "path",
            "required": true,
            "description": "The hostname/domain of the company",
            "schema": {
              "type": "string",
              "example": "openai.com"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Markdown analysis report",
            "content": {
              "text/markdown": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Cache control header"
              }
            }
          },
          "404": {
            "description": "Analysis not found or incomplete",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Export"]
      }
    },
    "/og/{hostname}": {
      "get": {
        "summary": "Get Open Graph image",
        "description": "Generates an SVG Open Graph image for social media sharing",
        "operationId": "getOpenGraphImage",
        "parameters": [
          {
            "name": "hostname",
            "in": "path",
            "required": true,
            "description": "The hostname/domain of the company",
            "schema": {
              "type": "string",
              "example": "openai.com"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SVG Open Graph image",
            "content": {
              "image/svg+xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Cache control header"
              }
            }
          }
        },
        "tags": ["Social"]
      }
    },
    "/webhook": {
      "post": {
        "summary": "Webhook endpoint",
        "description": "Internal webhook endpoint for receiving analysis completion notifications from the Parallel API",
        "operationId": "handleWebhook",
        "security": [
          {
            "webhookSignature": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["task_run.status"]
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "run_id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": ["completed", "failed"]
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "hostname": {
                            "type": "string"
                          },
                          "isDeep": {
                            "type": "boolean"
                          },
                          "username": {
                            "type": "string"
                          }
                        }
                      },
                      "error": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook processed successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required data",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid webhook signature",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Internal"]
      }
    },
    "/admin": {
      "get": {
        "summary": "Admin panel",
        "description": "Administrative interface for managing analyses (admin users only)",
        "operationId": "getAdminPanel",
        "security": [
          {
            "oauth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Admin panel interface",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Admin only"
                }
              }
            }
          }
        },
        "tags": ["Admin"]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "description": "OAuth2 authentication via X (Twitter)",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://competitors.p0web.com/authorize",
            "tokenUrl": "https://competitors.p0web.com/token",
            "scopes": {}
          }
        }
      },
      "webhookSignature": {
        "type": "apiKey",
        "in": "header",
        "name": "webhook-signature",
        "description": "HMAC SHA-256 signature for webhook verification"
      }
    },
    "schemas": {
      "DumpResponse": {
        "type": "object",
        "description": "Paginated response containing analyses data with parsed results",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "description": "Number of items per page",
            "example": 500
          },
          "total": {
            "type": "integer",
            "description": "Total number of analyses",
            "example": 1250
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 3
          },
          "hasNext": {
            "type": "boolean",
            "description": "Whether there are more pages available",
            "example": true
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Whether there are previous pages",
            "example": false
          },
          "data": {
            "type": "array",
            "description": "Array of analysis items with parsed result data",
            "items": {
              "$ref": "#/components/schemas/DumpAnalysisItem"
            }
          }
        },
        "required": [
          "page",
          "limit",
          "total",
          "totalPages",
          "hasNext",
          "hasPrevious",
          "data"
        ]
      },
      "DumpAnalysisItem": {
        "type": "object",
        "description": "Analysis item containing database columns (excluding raw result), Parallel API run metadata, basis data, and task schema content",
        "allOf": [
          {
            "$ref": "#/components/schemas/DatabaseAnalysis"
          },
          {
            "type": "object",
            "properties": {
              "run": {
                "$ref": "#/components/schemas/ParallelTaskRun",
                "description": "Run metadata from Parallel API result"
              },
              "basis": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ParallelFieldBasis"
                },
                "description": "Basis data from output.basis containing citations and reasoning"
              }
            }
          },
          {
            "$ref": "https://competitive-analysis-demo.parallel.ai/task.schema.json"
          }
        ]
      },
      "DatabaseAnalysis": {
        "type": "object",
        "description": "Database table columns (excluding result column)",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "Company domain hostname"
          },
          "company_domain": {
            "type": "string",
            "description": "Company domain"
          },
          "company_name": {
            "type": "string",
            "description": "Company name"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "done"],
            "description": "Analysis status"
          },
          "username": {
            "type": "string",
            "description": "Username of the user who requested the analysis"
          },
          "profile_image_url": {
            "type": "string",
            "description": "Profile image URL of the user"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the analysis was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the analysis was last updated"
          },
          "visits": {
            "type": "integer",
            "description": "Number of times this analysis has been viewed"
          },
          "error": {
            "type": "string",
            "nullable": true,
            "description": "Error message if analysis failed"
          }
        },
        "required": [
          "hostname",
          "company_domain",
          "company_name",
          "status",
          "username",
          "profile_image_url",
          "created_at",
          "updated_at",
          "visits"
        ]
      },
      "ParallelTaskRun": {
        "type": "object",
        "description": "Task run metadata from Parallel API",
        "properties": {
          "run_id": {
            "type": "string",
            "description": "ID of the task run"
          },
          "status": {
            "type": "string",
            "enum": [
              "queued",
              "action_required",
              "running",
              "completed",
              "failed",
              "cancelling",
              "cancelled"
            ],
            "description": "Status of the run"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the run is currently active"
          },
          "processor": {
            "type": "string",
            "description": "Processor used for the run"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true,
            "description": "User-provided metadata stored with the run"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the creation of the task"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last modification to the task"
          }
        },
        "required": [
          "run_id",
          "status",
          "is_active",
          "processor",
          "created_at",
          "modified_at"
        ]
      },
      "ParallelFieldBasis": {
        "type": "object",
        "description": "Citations and reasoning supporting one field of a task output",
        "properties": {
          "field": {
            "type": "string",
            "description": "Name of the output field"
          },
          "citations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParallelCitation"
            },
            "description": "List of citations supporting the output field"
          },
          "reasoning": {
            "type": "string",
            "description": "Reasoning for the output field"
          },
          "confidence": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "nullable": true,
            "description": "Confidence level for the output field"
          }
        },
        "required": ["field", "citations", "reasoning"]
      },
      "ParallelCitation": {
        "type": "object",
        "description": "A citation for a task output",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "description": "Title of the citation"
          },
          "url": {
            "type": "string",
            "description": "URL of the citation"
          },
          "excerpts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "Excerpts from the citation supporting the output"
          }
        },
        "required": ["url"]
      },
      "AnalysisResult": {
        "type": "object",
        "description": "Comprehensive competitive intelligence analysis result (legacy schema, use task.schema.json reference instead)",
        "properties": {
          "company_name": {
            "type": "string",
            "description": "Full legal name of the company"
          },
          "company_domain": {
            "type": "string",
            "description": "Primary website domain"
          },
          "headquarters_location": {
            "type": "string",
            "description": "City, State/Province, Country where company headquarters is located"
          },
          "industry_sector": {
            "type": "string",
            "description": "Primary industry sector and specific vertical"
          },
          "employee_count": {
            "type": "string",
            "description": "Current number of employees as specific number or range"
          },
          "linkedin_url": {
            "type": "string",
            "description": "Official LinkedIn company page URL"
          },
          "founded_year": {
            "type": "string",
            "description": "Year the company was founded"
          },
          "total_funding_raised": {
            "type": "string",
            "description": "Total amount of funding raised with currency"
          },
          "latest_funding_round": {
            "type": "string",
            "description": "Most recent funding round details"
          },
          "current_valuation": {
            "type": "string",
            "description": "Most recent company valuation"
          },
          "business_description": {
            "type": "string",
            "description": "Comprehensive description of the company's core business"
          },
          "unique_value_proposition": {
            "type": "string",
            "description": "What makes this company unique in the market"
          },
          "target_market_analysis": {
            "type": "string",
            "description": "Analysis of the company's target market segments"
          },
          "recent_news_developments": {
            "type": "string",
            "description": "Summary of significant company developments from the last 6-12 months"
          },
          "market_size_and_growth": {
            "type": "string",
            "description": "Analysis of the total addressable market and growth rates"
          },
          "competitive_landscape_overview": {
            "type": "string",
            "description": "Summary of the competitive landscape and market dynamics"
          },
          "competitors": {
            "type": "array",
            "description": "List of key direct competitors",
            "items": {
              "$ref": "#/components/schemas/Competitor"
            }
          },
          "target_company_reddit_analysis": {
            "type": "string",
            "description": "Analysis of Reddit discussions about the target company"
          },
          "reddit_overall_sentiment": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "description": "Overall sentiment of the target company on Reddit"
          },
          "market_opportunities": {
            "type": "string",
            "description": "Analysis of growth opportunities for the target company"
          },
          "executive_summary": {
            "type": "string",
            "description": "Executive summary for senior leadership decision-making"
          }
        },
        "required": [
          "company_name",
          "company_domain",
          "headquarters_location",
          "industry_sector",
          "employee_count",
          "business_description",
          "unique_value_proposition",
          "target_market_analysis",
          "recent_news_developments",
          "market_size_and_growth",
          "competitive_landscape_overview",
          "competitors",
          "target_company_reddit_analysis",
          "executive_summary"
        ]
      },
      "Competitor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Competitor company name"
          },
          "website": {
            "type": "string",
            "description": "Competitor website URL"
          },
          "hostname": {
            "type": "string",
            "description": "Competitor hostname/domain"
          }
        },
        "required": ["name", "website"]
      },
      "Analysis": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "Company domain hostname"
          },
          "company_domain": {
            "type": "string",
            "description": "Company domain"
          },
          "company_name": {
            "type": "string",
            "description": "Company name"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "done"],
            "description": "Analysis status"
          },
          "username": {
            "type": "string",
            "description": "Username of the user who requested the analysis"
          },
          "profile_image_url": {
            "type": "string",
            "description": "Profile image URL of the user"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the analysis was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the analysis was last updated"
          },
          "visits": {
            "type": "integer",
            "description": "Number of times this analysis has been viewed"
          },
          "result": {
            "type": "string",
            "nullable": true,
            "description": "JSON string containing the analysis result"
          },
          "error": {
            "type": "string",
            "nullable": true,
            "description": "Error message if analysis failed"
          }
        },
        "required": [
          "hostname",
          "company_domain",
          "company_name",
          "status",
          "username",
          "profile_image_url",
          "created_at",
          "updated_at",
          "visits"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Public",
      "description": "Public endpoints accessible without authentication"
    },
    {
      "name": "Analysis",
      "description": "Core analysis functionality"
    },
    {
      "name": "Search",
      "description": "Search through existing analyses"
    },
    {
      "name": "Export",
      "description": "Export analysis data in different formats"
    },
    {
      "name": "Social",
      "description": "Social media integration endpoints"
    },
    {
      "name": "Internal",
      "description": "Internal system endpoints"
    },
    {
      "name": "Admin",
      "description": "Administrative endpoints"
    }
  ]
}
